{"version":3,"sources":["webpack://@geoffcox/storage-js/./src/index.ts","webpack://@geoffcox/storage-js/./src/mappedContainerStorage.ts","webpack://@geoffcox/storage-js/./src/mappedStorage.ts","webpack://@geoffcox/storage-js/./src/singularStorage.ts","webpack://@geoffcox/storage-js/./src/types.ts","webpack://@geoffcox/storage-js/webpack/bootstrap","webpack://@geoffcox/storage-js/webpack/runtime/define property getters","webpack://@geoffcox/storage-js/webpack/runtime/hasOwnProperty shorthand","webpack://@geoffcox/storage-js/webpack/runtime/make namespace object","webpack://@geoffcox/storage-js/webpack/startup"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["export * from \"./types\";\r\nexport * from \"./mappedContainerStorage\";\r\nexport * from \"./mappedStorage\";\r\nexport * from \"./singularStorage\";\r\n","import {\r\n  StorageKeyConverter,\r\n  ContainerStorage,\r\n  ContainerItemStorage,\r\n} from './types';\r\n\r\nexport const createMappedContainerStorage = <TPrimaryKey, TForeignKey>(\r\n  keyConverter: StorageKeyConverter<TPrimaryKey, TForeignKey>,\r\n  storage: ContainerStorage<TForeignKey>\r\n): ContainerStorage<TPrimaryKey> => {\r\n  const info = async (key: TPrimaryKey) => {\r\n    return storage.info(await keyConverter.to(key));\r\n  };\r\n\r\n  const exists = async (key: TPrimaryKey) => {\r\n    return storage.exists(await keyConverter.to(key));\r\n  };\r\n\r\n  const create = async (key: TPrimaryKey) => {\r\n    return storage.create(await keyConverter.to(key));\r\n  };\r\n\r\n  const deleteContainer = async (key: TPrimaryKey) => {\r\n    return storage.delete(await keyConverter.to(key));\r\n  };\r\n\r\n  const parent = async (key: TPrimaryKey) => {\r\n    const foreignKey = await storage.parent(keyConverter.to(key));\r\n    return foreignKey ? await keyConverter.from(foreignKey) : null;\r\n  };\r\n\r\n  const children = async (key: TPrimaryKey) => {\r\n    const foreignKeys = await storage.children(keyConverter.to(key));\r\n    return Promise.all(\r\n      foreignKeys.map(async (f) => await keyConverter.from(f))\r\n    );\r\n  };\r\n\r\n  return {\r\n    info,\r\n    exists,\r\n    create,\r\n    delete: deleteContainer,\r\n    parent,\r\n    children,\r\n  };\r\n};\r\n\r\nexport const createMappedContainerItemStorage = <\r\n  TContainerKey,\r\n  TPrimaryItemKey,\r\n  TForeignItemKey\r\n>(\r\n  itemKeyConverter: StorageKeyConverter<TPrimaryItemKey, TForeignItemKey>,\r\n  storage: ContainerItemStorage<TContainerKey, TForeignItemKey>\r\n): ContainerItemStorage<TContainerKey, TPrimaryItemKey> => {\r\n  const items = async (key: TContainerKey) => {\r\n    const foreignKeys = await storage.items(key);\r\n    return Promise.all(\r\n      foreignKeys.map(async (f) => await itemKeyConverter.from(f))\r\n    );\r\n  };\r\n\r\n  return {\r\n    info: storage.info,\r\n    exists: storage.exists,\r\n    create: storage.create,\r\n    delete: storage.delete,\r\n    parent: storage.parent,\r\n    children: storage.children,\r\n    items,\r\n  };\r\n};\r\n","import { Storage, StorageKeyConverter, LockableStorage } from './types';\r\n\r\nexport const createMappedStorage = <TPrimaryKey, TForeignKey, TItem>(\r\n  converter: StorageKeyConverter<TPrimaryKey, TForeignKey>,\r\n  storage: Storage<TForeignKey, TItem>\r\n): Storage<TPrimaryKey, TItem> => {\r\n  const info = async (key: TPrimaryKey) => {\r\n    return storage.info(await converter.to(key));\r\n  };\r\n\r\n  const exists = async (key: TPrimaryKey) => {\r\n    return storage.exists(await converter.to(key));\r\n  };\r\n  const load = async (key: TPrimaryKey) => {\r\n    return storage.load(await converter.to(key));\r\n  };\r\n\r\n  const save = async (key: TPrimaryKey, item: TItem) => {\r\n    return storage.save(await converter.to(key), item);\r\n  };\r\n\r\n  const deleteItem = async (key: TPrimaryKey) => {\r\n    return storage.delete(await converter.to(key));\r\n  };\r\n\r\n  return {\r\n    info,\r\n    exists,\r\n    load,\r\n    save,\r\n    delete: deleteItem,\r\n  };\r\n};\r\n\r\nexport const createLockableMappedStorage = <TPrimaryKey, TForeignKey, TItem>(\r\n  converter: StorageKeyConverter<TPrimaryKey, TForeignKey>,\r\n  storage: LockableStorage<TForeignKey, TItem>\r\n): LockableStorage<TPrimaryKey, TItem> => {\r\n  const info = async (key: TPrimaryKey) => {\r\n    return storage.info(await converter.to(key));\r\n  };\r\n\r\n  const exists = async (key: TPrimaryKey) => {\r\n    return storage.exists(await converter.to(key));\r\n  };\r\n\r\n  const locked = async (key: TPrimaryKey) => {\r\n    return storage.locked(await converter.to(key));\r\n  };\r\n\r\n  const lock = async (key: TPrimaryKey) => {\r\n    return storage.lock(await converter.to(key));\r\n  };\r\n\r\n  const waitForLock = async (key: TPrimaryKey, timeoutMs: number) => {\r\n    return storage.waitForLock(await converter.to(key), timeoutMs);\r\n  };\r\n\r\n  return {\r\n    lockTokenKinds: storage.lockTokenKinds,\r\n    info,\r\n    exists,\r\n    locked,\r\n    lock,\r\n    unlock: storage.unlock,\r\n    waitForLock,\r\n    load: storage.load,\r\n    save: storage.save,\r\n    delete: storage.delete,\r\n  };\r\n};\r\n","import {\r\n  Storage,\r\n  SingularStorage,\r\n  SingularStorageKeyLocator,\r\n  LockableSoloStorage,\r\n  LockableStorage,\r\n} from './types';\r\n\r\nexport const createSingularStorage = <TKey, TItem>(\r\n  locator: SingularStorageKeyLocator<TKey>,\r\n  storage: Storage<TKey, TItem>\r\n): SingularStorage<TItem> => {\r\n  const info = () => {\r\n    return storage.info(locator.key());\r\n  };\r\n\r\n  const exists = () => {\r\n    return storage.exists(locator.key());\r\n  };\r\n  const load = () => {\r\n    return storage.load(locator.key());\r\n  };\r\n\r\n  const save = (item: TItem) => {\r\n    return storage.save(locator.key(), item);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    return storage.delete(locator.key());\r\n  };\r\n\r\n  return {\r\n    info,\r\n    exists,\r\n    load,\r\n    save,\r\n    delete: deleteItem,\r\n  };\r\n};\r\n\r\nexport const createLockableSoloStorage = <TKey, TItem>(\r\n  locator: SingularStorageKeyLocator<TKey>,\r\n  storage: LockableStorage<TKey, TItem>\r\n): LockableSoloStorage<TItem> => {\r\n  const info = () => {\r\n    return storage.info(locator.key());\r\n  };\r\n\r\n  const exists = () => {\r\n    return storage.exists(locator.key());\r\n  };\r\n\r\n  const locked = () => {\r\n    return storage.locked(locator.key());\r\n  };\r\n\r\n  const lock = () => {\r\n    return storage.lock(locator.key());\r\n  };\r\n\r\n  const waitForLock = (timeoutMs: number) => {\r\n    return storage.waitForLock(locator.key(), timeoutMs);\r\n  };\r\n\r\n  return {\r\n    tokenKinds: storage.lockTokenKinds,\r\n    info,\r\n    exists,\r\n    locked,\r\n    lock,\r\n    unlock: storage.unlock,\r\n    waitForLock,\r\n    load: storage.load,\r\n    save: storage.save,\r\n    delete: storage.delete,\r\n  };\r\n};\r\n","// -------------------- Storage  --------------------//\r\n\r\n/**\r\n * Describes storage meta-data for an item or container.\r\n * Any or all properties will be undefined when the storage implementation does not support them.\r\n */\r\nexport type StorageInfo = {\r\n  /**\r\n   * The date/time it was created.\r\n   */\r\n  created?: Date;\r\n\r\n  /**\r\n   * The date/time it was last modified.\r\n   */\r\n  modified?: Date;\r\n\r\n  /**\r\n   * The date/time it was last accessed.\r\n   */\r\n  accessed?: Date;\r\n\r\n  /**\r\n   * The size in bytes.\r\n   */\r\n  size?: bigint;\r\n};\r\n\r\n/**\r\n * Provides storage for an item.\r\n * @template TKey The type of key used to identify the item.\r\n * @template TItem The type of the item.\r\n */\r\nexport type Storage<TKey, TItem> = {\r\n  /**\r\n   * Gets storage information for the item.\r\n   */\r\n  info: (key: TKey) => Promise<StorageInfo>;\r\n  /**\r\n   * Returns true if the item exists; false otherwise.\r\n   */\r\n  exists: (key: TKey) => Promise<boolean>;\r\n  /**\r\n   * Loads the item from storage.\r\n   */\r\n  load: (key: TKey) => Promise<TItem>;\r\n  /**\r\n   * Saves the item to storage; allocating new storage as necessary.\r\n   */\r\n  save: (key: TKey, item: TItem) => Promise<void>;\r\n  /**\r\n   * Deletes the item from storage; no-op if item does not exist.\r\n   */\r\n  delete: (key: TKey) => Promise<void>;\r\n};\r\n\r\n// -------------------- Mapped Storage  --------------------//\r\n\r\n/**\r\n * Converts between primary and foreign storage keys.\r\n * Typically, primary keys are used by the caller and foreign keys used by the underlying implementation.\r\n * @template TPrimaryKey The type of primary key used to locate items.\r\n * @template TForeignKey The type of foreign key used to locate items.\r\n */\r\nexport type StorageKeyConverter<TPrimaryKey, TForeignKey> = {\r\n  to: (primary: TPrimaryKey) => TForeignKey;\r\n  from: (foreign: TForeignKey) => TPrimaryKey;\r\n};\r\n\r\n// -------------------- Lockable Storage  --------------------//\r\n\r\n/**\r\n * Represents a lock on an item.\r\n */\r\nexport type StorageLockToken = {\r\n  /**\r\n   * The kind of lock token.\r\n   */\r\n  kind: string;\r\n  /**\r\n   * If defined, allows unlocking from this token.\r\n   */\r\n  unlock?: () => void;\r\n};\r\n\r\n/**\r\n * Provides storage for an item where a lock provides exclusive write access.\r\n * @template TKey The type of key used to identify the item.\r\n * @template TItem The type of the item.\r\n */\r\nexport type LockableStorage<TKey, TItem> = {\r\n  /**\r\n   * The kinds of lock tokens this storage implementation supports.\r\n   */\r\n  lockTokenKinds: string[];\r\n  /**\r\n   * Gets storage information for the item.\r\n   */\r\n  info: (key: TKey) => Promise<StorageInfo>;\r\n  /**\r\n   * Returns true if the item exists; false otherwise.\r\n   */\r\n  exists: (key: TKey) => Promise<boolean>;\r\n  /**\r\n   * Returns true if the item is locked; false otherwise.\r\n   */\r\n  locked: (key: TKey) => Promise<boolean>;\r\n  /**\r\n   * Locks the item; fails immediately if already locked.\r\n   */\r\n  lock: (key: TKey) => Promise<StorageLockToken>;\r\n  /**\r\n   * Unlocks the item.\r\n   */\r\n  unlock: (token: StorageLockToken) => Promise<void>;\r\n  /**\r\n   * Waits for the item to be unlocked and then locks it.\r\n   */\r\n  waitForLock: (key: TKey, timeoutMs: number) => Promise<StorageLockToken>;\r\n  /**\r\n   * Loads the item from storage.\r\n   */\r\n  load: (token: StorageLockToken) => Promise<TItem>;\r\n  /**\r\n   * Saves the item to storage; allocating new storage as necessary.\r\n   */\r\n  save: (token: StorageLockToken, item: TItem) => Promise<void>;\r\n  /**\r\n   * Deletes the item from storage; no-op if item does not exist.\r\n   */\r\n  delete: (token: StorageLockToken) => Promise<void>;\r\n};\r\n\r\n// -------------------- Singular Storage  --------------------//\r\n\r\n/**\r\n * Provides the location of single storage.\r\n * @template TKey The type of key used to identify the item.\r\n */\r\nexport type SingularStorageKeyLocator<TKey> = {\r\n  /**\r\n   * Gets the key for the single storage location.\r\n   */\r\n  key: () => TKey;\r\n};\r\n\r\n/**\r\n * Provides storage for an item stored at a single location.\r\n * Typically, this is something like a configuration file at a well known location.\r\n * @template TItem The type of the item.\r\n */\r\nexport type SingularStorage<TItem> = {\r\n  /**\r\n   * Gets storage information for the item.\r\n   */\r\n  info: () => Promise<StorageInfo>;\r\n  /**\r\n   * Returns true if the item exists; false otherwise.\r\n   */\r\n  exists: () => Promise<boolean>;\r\n  /**\r\n   * Loads the item from storage.\r\n   */\r\n  load: () => Promise<TItem>;\r\n  /**\r\n   * Saves the item to storage; allocating new storage as necessary.\r\n   */\r\n  save: (item: TItem) => Promise<void>;\r\n  /**\r\n   * Deletes the item from storage; no-op if item does not exist.\r\n   */\r\n  delete: () => Promise<void>;\r\n};\r\n\r\n/**\r\n * Provides storage for an item stored at a singular location where a lock provides exclusive write access.\r\n * @template TItem The type of the item.\r\n */\r\nexport type LockableSoloStorage<TItem> = {\r\n  tokenKinds: string[];\r\n  /**\r\n   * Gets storage information for the item.\r\n   */\r\n  info: () => Promise<StorageInfo>;\r\n  /**\r\n   * Returns true if the item exists; false otherwise.\r\n   */\r\n  exists: () => Promise<boolean>;\r\n  /**\r\n   * Returns true if the item is locked; false otherwise.\r\n   */\r\n  locked: () => Promise<boolean>;\r\n  /**\r\n   * Locks the item; fails immediately if already locked.\r\n   */\r\n  lock: () => Promise<StorageLockToken>;\r\n  /**\r\n   * Unlocks the item.\r\n   */\r\n  unlock: (token: StorageLockToken) => Promise<void>;\r\n  /**\r\n   * Waits for the item to be unlocked and then locks it.\r\n   */\r\n  waitForLock: (timeoutMs: number) => Promise<StorageLockToken>;\r\n  /**\r\n   * Loads the item from storage.\r\n   */\r\n  load: (token: StorageLockToken) => Promise<TItem>;\r\n  /**\r\n   * Saves the item to storage; allocating new storage as necessary.\r\n   */\r\n  save: (token: StorageLockToken, item: TItem) => Promise<void>;\r\n  /**\r\n   * Deletes the item from storage; no-op if item does not exist.\r\n   */\r\n  delete: (token: StorageLockToken) => Promise<void>;\r\n};\r\n\r\n// -------------------- Container Storage  --------------------//\r\n\r\n/**\r\n * Provides storage container management.\r\n * @template TKey The type of key used to identify the container.\r\n */\r\nexport type ContainerStorage<TKey> = {\r\n  /**\r\n   * Gets storage information for the container.\r\n   */\r\n  info: (key: TKey) => Promise<StorageInfo>;\r\n  /**\r\n   * Returns true if the container exists; false otherwise.\r\n   */\r\n  exists: (key: TKey) => Promise<boolean>;\r\n  /**\r\n   * Creates the container in storage.\r\n   * Some storage implementations may no-op this method\r\n   * and only create the container when an item is saved within.\r\n   */\r\n  create: (key: TKey) => Promise<void>;\r\n  /**\r\n   * Deletes the container from storage; no-op if item does not exist.\r\n   */\r\n  delete: (key: TKey, recursive?: boolean) => Promise<void>;\r\n  /**\r\n   * Returns the parent container; null when a top-level container.\r\n   */\r\n  parent: (key: TKey) => Promise<TKey | null>;\r\n  /**\r\n   * Returns the list of immediate child containers.\r\n   */\r\n  children: (key: TKey) => Promise<TKey[]>;\r\n};\r\n\r\n/**\r\n * Provides storage container management.\r\n * @template TContainerKey The type of key used to identify the container.\r\n * @template TItemKey The type of key used to identify the item.\r\n */\r\nexport type ContainerItemStorage<\r\n  TContainerKey,\r\n  TItemKey\r\n> = ContainerStorage<TContainerKey> & {\r\n  /**\r\n   * Returns the list of immediate child items.\r\n   */\r\n  items: (key: TContainerKey) => Promise<TItemKey[]>;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}